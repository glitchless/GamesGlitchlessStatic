{
  "questIDHigh:4": 0,
  "preRequisites:9": {
    "0:10": {
      "questIDHigh:4": 0,
      "questIDLow:4": 2477
    }
  },
  "questIDLow:4": 3250,
  "properties:10": {
    "betterquesting:10": {
      "snd_complete:8": "random.levelup",
      "taskLogic:8": "AND",
      "visibility:8": "NORMAL",
      "isMain:1": 0,
      "simultaneous:1": 0,
      "icon:10": {
        "id:8": "ae2fc:fluid_discretizer",
        "Count:3": 1,
        "Damage:2": 0,
        "OreDict:8": ""
      },
      "snd_update:8": "random.levelup",
      "repeatTime:3": -1,
      "globalShare:1": 0,
      "questLogic:8": "AND",
      "repeat_relative:1": 1,
      "name:8": "AE2 Fluid Crafting",
      "lockedProgress:1": 0,
      "autoClaim:1": 0,
      "isSilent:1": 0,
      "desc:8": "Well well well, what do we have here? Flasks are redundant now? NO WAY! \nAnyway, while you can listen to those who swear flasks are *the shit* and *the only way* you can automate fluid crafting and the AL, you can use this powerful addon backported by GlodBlock with some help by other devs.\n\nNow, what do you need to get that juicy stuff working?\nEvery ME System needs a Fluid Discretizer. It allows for on demand crafting. While you can use AE2FC without Fluid Discretizer for moving fluids, you need a Discretizer for autocrafting.\n\nThen you also need a fluid terminal or a fluid processing terminal for assembly line. \n\nWhen creating patterns you will notice your fluids being placed as if they were items. \nYour finished patterns will look blue-ish. Placing those in a Dual Interface will allow AE2 to push the fluids and items both. Note. Fluids are being sent first, then items.\nYou can switch the dual interface on the top right if you want it to keep fluids in stock. \n\nIf you use a blue pattern (fluid pattern) in a normal interface, AE2 will send the fluid as a fluid packet. This is just a representation of the fluid as an item. A fluid decoder can turn it back into a fluid and saves it in the fluid grid.\n\nYou can use an ingredient buffer (large or normal) so your items and fluids sent by a pattern can get stored internally in one block. The normal buffer can hold 9 items and 4 fluids whereas the large one can hold 27 items and 7 fluids.\nYou can use it to automate multiblocks with e.g item and fluid conduits. \n\nIf you want to automate single blocks its as easy as eating chocolate cake while on your diet:\nMake the pattern, make an interface, boom- done!\nIt will automatically insert the fluid in the fluid inventory of a single block machine. \n\nAutomating the Assembling Line is easy. It follows the typical flask setup but replaces tanks with fluid decoders and a fluid storage bus to insert the fluids. Also we are sending fluids first, then items by using the priority button (made by Runakai and Rukern) in the fluid processing terminal. Make sure to give the decoders their own subnets in ME. If you need more detailled information, visit the wiki:\n\nhttps://gtnh.miraheze.org/wiki/AE2FC\n\nÂ§3The Extra Cells mod is now deprecated. Makes sure to convert any old components and cells to AE2 and AE2FC.\n"
    }
  },
  "tasks:9": {
    "0:10": {
      "partialMatch:1": 1,
      "autoConsume:1": 0,
      "groupDetect:1": 0,
      "ignoreNBT:1": 1,
      "index:3": 0,
      "consume:1": 0,
      "requiredItems:9": {
        "0:10": {
          "id:8": "ae2fc:fluid_discretizer",
          "Count:3": 1,
          "Damage:2": 0,
          "OreDict:8": ""
        },
        "1:10": {
          "id:8": "ae2fc:fluid_interface",
          "Count:3": 1,
          "Damage:2": 0,
          "OreDict:8": ""
        },
        "2:10": {
          "id:8": "ae2fc:part_fluid_pattern_terminal",
          "Count:3": 1,
          "Damage:2": 0,
          "OreDict:8": ""
        },
        "3:10": {
          "id:8": "ae2fc:ingredient_buffer",
          "Count:3": 1,
          "Damage:2": 0,
          "OreDict:8": ""
        }
      },
      "taskID:8": "bq_standard:retrieval"
    }
  },
  "rewards:9": {
    "0:10": {
      "rewardID:8": "bq_standard:item",
      "index:3": 0,
      "rewards:9": {
        "0:10": {
          "id:8": "ae2fc:fluid_storage16",
          "Count:3": 1,
          "tag:10": {},
          "Damage:2": 0,
          "OreDict:8": ""
        },
        "1:10": {
          "id:8": "ae2fc:part_fluid_import",
          "Count:3": 1,
          "Damage:2": 0,
          "OreDict:8": ""
        },
        "2:10": {
          "id:8": "ae2fc:part_fluid_export",
          "Count:3": 1,
          "Damage:2": 0,
          "OreDict:8": ""
        }
      }
    }
  }
}